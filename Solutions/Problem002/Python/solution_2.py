"""Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

                1 2 3 5 8 13 21 34 55 89 ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""


class Solution:

    def __init__(self) -> None:
        self.generator = self.generate_fib()

    def calculate_answer(self) -> int:
        summ = 0
        i = 1

        while (number := next(self.generator)) < 4_000_000:
            summ += number if number % 2 == 0 else 0
            i += 1

        return summ

    def generate_fib(self) -> int:
        f1 = 1
        f2 = 2

        while True:
            f = f1 + f2
            yield f1
            f1, f2 = f2, f


def main() -> None:
    runner = Solution()
    result = runner.calculate_answer()
    print(f"Answer: {result}")


if __name__ == "__main__":
    main()

